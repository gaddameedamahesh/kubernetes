| Resource       | What It Is                                                 | Real-Time Use                                               | If Not Used (Drawbacks)                                                               |
| -------------- | ---------------------------------------------------------- | ----------------------------------------------------------- | ------------------------------------------------------------------------------------- |
| **Namespace**  | Logical grouping for resources in a cluster.               | Separate environments (dev, qa, prod).                      | All resources end up in “default” namespace → hard to manage and apply RBAC/security. |
| **ConfigMap**  | Stores non-sensitive configuration data (key-value pairs). | App configs like database URL, environment, file paths.     | Hard-coded configs → redeploy needed for every small config change.                   |
| **Secret**     | Stores **sensitive** data (base64-encoded).                | Passwords, API keys, tokens.                                | Storing secrets in code → major security risk.                                        |
| **Deployment** | Manages **replicas** of pods and rolling updates.          | Scalable app backend or API.                                | No self-healing; manual recreation of crashed pods.                                   |
| **DaemonSet**  | Runs **one pod per node** automatically.                   | Node-level services like log collectors, monitoring agents. | Miss system-wide coverage → logs/metrics not collected.                               |
| **Service**    | Exposes a set of pods with a stable IP/DNS.                | Load balances requests to backend pods.                     | Pods get new IPs every restart; clients can’t find them.                              |
| **Job**        | Runs a **one-time task** (e.g., backup, batch job).        | Database backup, cron job, email batch.                     | Manual one-off scripts → inconsistent automation.                                     |
| **Ingress**    | Exposes HTTP(S) routes to services with domain/rules.      | Access app from outside via domain.                         | LoadBalancer costs more per service; no host/path routing.                            |
